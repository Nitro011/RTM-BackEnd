// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RTM.Persistence;

namespace RTM.Persistence.Migrations
{
    [DbContext(typeof(RTMDbContext))]
    [Migration("20200814210803_ArreglarITEMS")]
    partial class ArreglarITEMS
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RTM.Models.Almacen", b =>
                {
                    b.Property<int>("AlmacenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Existencia")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_Almacen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlmacenID");

                    b.ToTable("Almacen");
                });

            modelBuilder.Entity("RTM.Models.Area_Produccion_Control_Piezas", b =>
                {
                    b.Property<int>("Area_Produccion_Control_PiezasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Control_Ubicacion_PiezaID")
                        .HasColumnType("int");

                    b.Property<int?>("DepartamentoID")
                        .HasColumnType("int");

                    b.HasKey("Area_Produccion_Control_PiezasID");

                    b.HasIndex("DepartamentoID");

                    b.ToTable("Area_Produccion_Control_Piezas");
                });

            modelBuilder.Entity("RTM.Models.Area_Produccion_Materias_Primas", b =>
                {
                    b.Property<int>("Area_Produccion_Materia_PrimaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CantidadSaliente")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaDeSalida")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Materia_PrimaID")
                        .HasColumnType("int");

                    b.Property<int?>("SubDepartamentoID")
                        .HasColumnType("int");

                    b.HasKey("Area_Produccion_Materia_PrimaID");

                    b.HasIndex("Materia_PrimaID");

                    b.HasIndex("SubDepartamentoID");

                    b.ToTable("Area_Produccion_Materias_Primas");
                });

            modelBuilder.Entity("RTM.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo_Electronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("No_Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre_Cliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RNC")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("RTM.Models.Colore", b =>
                {
                    b.Property<int>("ColorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ColorID");

                    b.ToTable("Colores");
                });

            modelBuilder.Entity("RTM.Models.Control_Ubicacion_Piezas", b =>
                {
                    b.Property<int>("Control_Ubicacion_PiezaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Cantidad_Piezas_Realizadas")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoID")
                        .HasColumnType("int");

                    b.Property<int?>("Orden_ClienteID")
                        .HasColumnType("int");

                    b.Property<int?>("SubDepartamentoID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Tiempo_Finalizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Tiempo_Inicio")
                        .HasColumnType("datetime2");

                    b.HasKey("Control_Ubicacion_PiezaID");

                    b.HasIndex("EstadoID");

                    b.HasIndex("Orden_ClienteID");

                    b.HasIndex("SubDepartamentoID");

                    b.ToTable("Control_Ubicacion_Piezas");
                });

            modelBuilder.Entity("RTM.Models.Departamentos", b =>
                {
                    b.Property<int>("DepartamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Departamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoDepartamentoID")
                        .HasColumnType("int");

                    b.HasKey("DepartamentoID");

                    b.HasIndex("TipoDepartamentoID");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("RTM.Models.Empleado", b =>
                {
                    b.Property<int>("EmpleadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoEmpleado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Edad")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PosicionID")
                        .HasColumnType("int");

                    b.Property<bool?>("Sexo")
                        .HasColumnType("bit");

                    b.Property<int?>("SubDepartamentoID")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpleadoID");

                    b.HasIndex("PosicionID");

                    b.HasIndex("SubDepartamentoID");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("RTM.Models.Estado", b =>
                {
                    b.Property<int>("EstadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado1")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoID");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("RTM.Models.Estados_Usuarios_Almacen", b =>
                {
                    b.Property<int>("Estado_Usuario_AlmacenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Estado_Usuario_AlmacenID");

                    b.ToTable("Estados_Usuarios_Almacen");
                });

            modelBuilder.Entity("RTM.Models.Marca", b =>
                {
                    b.Property<int>("MarcaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Marca1")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MarcaID");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("RTM.Models.Materias_Primas", b =>
                {
                    b.Property<int>("Materia_PrimaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DivisionMateriaPrimaID")
                        .HasColumnType("int");

                    b.Property<string>("PartNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Tipo_MaterialID")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Materia_PrimaID");

                    b.HasIndex("DivisionMateriaPrimaID");

                    b.HasIndex("Tipo_MaterialID");

                    b.ToTable("Materias_Primas");
                });

            modelBuilder.Entity("RTM.Models.Metricas_Eficiencias", b =>
                {
                    b.Property<int>("Metrica_EficienciaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Control_Ubicacion_PiezaID")
                        .HasColumnType("int");

                    b.Property<int?>("Resultado_Metricas_Eficiencia")
                        .HasColumnType("int");

                    b.HasKey("Metrica_EficienciaID");

                    b.HasIndex("Control_Ubicacion_PiezaID");

                    b.ToTable("Metricas_Eficiencias");
                });

            modelBuilder.Entity("RTM.Models.Modelo", b =>
                {
                    b.Property<int>("ModeloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Modelo1")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModeloID");

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("RTM.Models.Ordenes_Clientes", b =>
                {
                    b.Property<int>("Orden_ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Cantidad_Calzado_Realizar")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteID")
                        .HasColumnType("int");

                    b.Property<string>("CodigoQR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha_Entrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_Inicio")
                        .HasColumnType("datetime2");

                    b.HasKey("Orden_ClienteID");

                    b.HasIndex("ClienteID");

                    b.ToTable("Ordenes_Clientes");
                });

            modelBuilder.Entity("RTM.Models.Ordenes_Clientes_Detalles", b =>
                {
                    b.Property<int>("Orden_Cliente_DetalleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MarcaID")
                        .HasColumnType("int");

                    b.Property<int?>("Orden_ClienteID")
                        .HasColumnType("int");

                    b.HasKey("Orden_Cliente_DetalleID");

                    b.HasIndex("MarcaID");

                    b.HasIndex("Orden_ClienteID")
                        .IsUnique()
                        .HasFilter("[Orden_ClienteID] IS NOT NULL");

                    b.ToTable("Ordenes_Clientes_Detalles");
                });

            modelBuilder.Entity("RTM.Models.Ordenes_Clientes_Detalles_Colores", b =>
                {
                    b.Property<int>("Orden_Cliente_Detalle_ColorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ColorID")
                        .HasColumnType("int");

                    b.Property<int?>("Orden_Cliente_DetalleID")
                        .HasColumnType("int");

                    b.HasKey("Orden_Cliente_Detalle_ColorID");

                    b.HasIndex("ColorID");

                    b.HasIndex("Orden_Cliente_DetalleID");

                    b.ToTable("Ordenes_Clientes_Detalles_Colores");
                });

            modelBuilder.Entity("RTM.Models.Ordenes_Clientes_Detalles_Dimensiones", b =>
                {
                    b.Property<int>("Orden_Cliente_Detalle_DimensionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Orden_Cliente_DetalleID")
                        .HasColumnType("int");

                    b.Property<int?>("SizeID")
                        .HasColumnType("int");

                    b.HasKey("Orden_Cliente_Detalle_DimensionID");

                    b.HasIndex("Orden_Cliente_DetalleID");

                    b.HasIndex("SizeID");

                    b.ToTable("Ordenes_Clientes_Detalles_Dimensiones");
                });

            modelBuilder.Entity("RTM.Models.Ordenes_Clientes_Detalles_Modelos", b =>
                {
                    b.Property<int>("Orden_Cliente_Detalle_ModeloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ModeloID")
                        .HasColumnType("int");

                    b.Property<int?>("Orden_Cliente_DetalleID")
                        .HasColumnType("int");

                    b.HasKey("Orden_Cliente_Detalle_ModeloID");

                    b.HasIndex("ModeloID");

                    b.HasIndex("Orden_Cliente_DetalleID");

                    b.ToTable("Ordenes_Clientes_Detalles_Modelos");
                });

            modelBuilder.Entity("RTM.Models.Ordenes_Clientes_Detalles_Tipos_Calzados", b =>
                {
                    b.Property<int>("Orden_Cliente_Detalle_Tipo_CalzadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Orden_Cliente_DetalleID")
                        .HasColumnType("int");

                    b.Property<int?>("Tipo_CalzadoID")
                        .HasColumnType("int");

                    b.HasKey("Orden_Cliente_Detalle_Tipo_CalzadoID");

                    b.HasIndex("Orden_Cliente_DetalleID");

                    b.HasIndex("Tipo_CalzadoID");

                    b.ToTable("Ordenes_Clientes_Detalles_Tipos_Calzados");
                });

            modelBuilder.Entity("RTM.Models.Role", b =>
                {
                    b.Property<int>("RolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tipo_Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("RTM.Models.Size", b =>
                {
                    b.Property<int>("SizeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoriaSizeID")
                        .HasColumnType("int");

                    b.Property<string>("EURO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USA")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SizeID");

                    b.HasIndex("CategoriaSizeID");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("RTM.Models.Suplidor_Materia_Prima", b =>
                {
                    b.Property<int>("Suplidor_Materia_PrimaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlmacenID")
                        .HasColumnType("int");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha_Entrega")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Materia_PrimaID")
                        .HasColumnType("int");

                    b.Property<int?>("Materias_PrimasMateria_PrimaID")
                        .HasColumnType("int");

                    b.Property<int?>("SuplidorID")
                        .HasColumnType("int");

                    b.Property<int?>("SuplidoreSuplidorID")
                        .HasColumnType("int");

                    b.HasKey("Suplidor_Materia_PrimaID");

                    b.HasIndex("AlmacenID");

                    b.HasIndex("Materias_PrimasMateria_PrimaID");

                    b.HasIndex("SuplidoreSuplidorID");

                    b.ToTable("suplidor_Materia_Prima");
                });

            modelBuilder.Entity("RTM.Models.Suplidore", b =>
                {
                    b.Property<int>("SuplidorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo_Electronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Empresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("No_Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre_Suplidor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SuplidorID");

                    b.ToTable("Suplidores");
                });

            modelBuilder.Entity("RTM.Models.TableDB.BOM", b =>
                {
                    b.Property<int>("BOMID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModeloID")
                        .HasColumnType("int");

                    b.Property<string>("PatterN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BOMID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("ModeloID");

                    b.ToTable("BOMs");
                });

            modelBuilder.Entity("RTM.Models.TableDB.BOMDetalles", b =>
                {
                    b.Property<int>("BOMDetalleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BOMID")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DIE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Ext")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Item")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Usage")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BOMDetalleID");

                    b.HasIndex("BOMID");

                    b.ToTable("BOMDetalles");
                });

            modelBuilder.Entity("RTM.Models.TableDB.CategoriaSize", b =>
                {
                    b.Property<int>("CategoriaSizeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clasificaciones")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaSizeID");

                    b.ToTable("categoriaSizes");
                });

            modelBuilder.Entity("RTM.Models.TableDB.CategoriasEstilos", b =>
                {
                    b.Property<int>("CategoriaEstiloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoriaEstilo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaEstiloID");

                    b.ToTable("CategoriasEstilos");
                });

            modelBuilder.Entity("RTM.Models.TableDB.Constructions", b =>
                {
                    b.Property<int>("ConstructionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Construction")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConstructionID");

                    b.ToTable("Constructions");
                });

            modelBuilder.Entity("RTM.Models.TableDB.Divisiones", b =>
                {
                    b.Property<int>("DivisionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DivisionID");

                    b.ToTable("Divisiones");
                });

            modelBuilder.Entity("RTM.Models.TableDB.DivisionesMateriasPrimas", b =>
                {
                    b.Property<int>("DivisionMateriaPrimaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DivisionMateriaPrimaID");

                    b.ToTable("DivisionesMateriasPrimas");
                });

            modelBuilder.Entity("RTM.Models.TableDB.Estilos", b =>
                {
                    b.Property<int>("EstiloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comentarios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CostoSTD")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DivisionID")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoID")
                        .HasColumnType("int");

                    b.Property<int>("Estilo_No")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Ganancia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Last")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MarcaID")
                        .HasColumnType("int");

                    b.Property<string>("PattenNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PesoEstilos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UnidadMedidaEstiloID")
                        .HasColumnType("int");

                    b.HasKey("EstiloID");

                    b.HasIndex("DivisionID");

                    b.HasIndex("EstadoID");

                    b.HasIndex("MarcaID");

                    b.HasIndex("UnidadMedidaEstiloID");

                    b.ToTable("Estilos");
                });

            modelBuilder.Entity("RTM.Models.TableDB.Estilos_CategoriasEstilos", b =>
                {
                    b.Property<int>("Estilo_CategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoriaEstiloID")
                        .HasColumnType("int");

                    b.Property<int?>("EstiloID")
                        .HasColumnType("int");

                    b.HasKey("Estilo_CategoriaID");

                    b.HasIndex("CategoriaEstiloID");

                    b.HasIndex("EstiloID");

                    b.ToTable("Estilos_CategoriasEstilos");
                });

            modelBuilder.Entity("RTM.Models.TableDB.Estilos_Colores", b =>
                {
                    b.Property<int>("Estilo_ColorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ColorID")
                        .HasColumnType("int");

                    b.Property<int>("EstiloID")
                        .HasColumnType("int");

                    b.HasKey("Estilo_ColorID");

                    b.HasIndex("ColorID");

                    b.HasIndex("EstiloID");

                    b.ToTable("Estilos_Colores");
                });

            modelBuilder.Entity("RTM.Models.TableDB.Estilos_MateriasPrimas", b =>
                {
                    b.Property<int>("Estilo_MateriaPrimaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EstiloID")
                        .HasColumnType("int");

                    b.Property<int?>("Materia_PrimaID")
                        .HasColumnType("int");

                    b.HasKey("Estilo_MateriaPrimaID");

                    b.HasIndex("EstiloID");

                    b.HasIndex("Materia_PrimaID");

                    b.ToTable("Estilos_MateriasPrimas");
                });

            modelBuilder.Entity("RTM.Models.TableDB.Estilos_Modelos", b =>
                {
                    b.Property<int>("Estilo_ModeloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EstiloID")
                        .HasColumnType("int");

                    b.Property<int?>("ModeloID")
                        .HasColumnType("int");

                    b.HasKey("Estilo_ModeloID");

                    b.HasIndex("EstiloID");

                    b.HasIndex("ModeloID");

                    b.ToTable("Estilos_Modelos");
                });

            modelBuilder.Entity("RTM.Models.TableDB.Estilos_TiposEstilos", b =>
                {
                    b.Property<int>("Estilo_TiposEstiloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EstiloID")
                        .HasColumnType("int");

                    b.Property<int?>("Tipo_CalzadoID")
                        .HasColumnType("int");

                    b.HasKey("Estilo_TiposEstiloID");

                    b.HasIndex("EstiloID");

                    b.HasIndex("Tipo_CalzadoID");

                    b.ToTable("Estilos_TiposEstilos");
                });

            modelBuilder.Entity("RTM.Models.TableDB.ITEMS", b =>
                {
                    b.Property<int>("ITEMID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombreITEMS")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ITEMID");

                    b.ToTable("ITEMS");
                });

            modelBuilder.Entity("RTM.Models.TableDB.OperacionesCalzados", b =>
                {
                    b.Property<int>("OperacionesCalzadosID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadOperaciones")
                        .HasColumnType("int");

                    b.Property<decimal>("CostoOperacional")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OperacionesCalzadosID");

                    b.ToTable("OperacionesCalzados");
                });

            modelBuilder.Entity("RTM.Models.TableDB.Posiciones", b =>
                {
                    b.Property<int>("PosicionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Posicion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PosicionID");

                    b.ToTable("Posiciones");
                });

            modelBuilder.Entity("RTM.Models.TableDB.SubDepartamentos", b =>
                {
                    b.Property<int>("SubDepartamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartamentoID")
                        .HasColumnType("int");

                    b.Property<string>("SubDepartamento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubDepartamentoID");

                    b.HasIndex("DepartamentoID");

                    b.ToTable("SubDepartamentos");
                });

            modelBuilder.Entity("RTM.Models.TableDB.TiposDepartamentos", b =>
                {
                    b.Property<int>("TipoDepartamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TipoDepartamento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoDepartamentoID");

                    b.ToTable("TiposDepartamentos");
                });

            modelBuilder.Entity("RTM.Models.TableDB.UnidadesMedidasEstilos", b =>
                {
                    b.Property<int>("UnidadMedidaEstiloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UnidadMedidaEstilo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnidadMedidaEstiloID");

                    b.ToTable("UnidadesMedidasEstilos");
                });

            modelBuilder.Entity("RTM.Models.Tipo_Calzados", b =>
                {
                    b.Property<int>("Tipo_CalzadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tipo_Calzado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Tipo_CalzadoID");

                    b.ToTable("Tipo_Calzados");
                });

            modelBuilder.Entity("RTM.Models.Tipo_Material", b =>
                {
                    b.Property<int>("Tipo_MaterialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre_Material")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Tipo_MaterialID");

                    b.ToTable("Tipo_Material");
                });

            modelBuilder.Entity("RTM.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contrasena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmpleadoID")
                        .HasColumnType("int");

                    b.Property<string>("NombreDeUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RolID")
                        .HasColumnType("int");

                    b.Property<int?>("SubDepartamentoID")
                        .HasColumnType("int");

                    b.HasKey("UsuarioID");

                    b.HasIndex("EmpleadoID");

                    b.HasIndex("RolID");

                    b.HasIndex("SubDepartamentoID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("RTM.Models.Usuarios_Almacen", b =>
                {
                    b.Property<int>("Usuario_AlmacenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlmacenID")
                        .HasColumnType("int");

                    b.Property<int?>("Estado_Usuario_AlmacenID")
                        .HasColumnType("int");

                    b.Property<int?>("Estados_Usuarios_AlmacenEstado_Usuario_AlmacenID")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("Usuario_AlmacenID");

                    b.HasIndex("AlmacenID");

                    b.HasIndex("Estados_Usuarios_AlmacenEstado_Usuario_AlmacenID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Usuarios_Almacen");
                });

            modelBuilder.Entity("RTM.Models.Area_Produccion_Control_Piezas", b =>
                {
                    b.HasOne("RTM.Models.Departamentos", "Departamentos")
                        .WithMany()
                        .HasForeignKey("DepartamentoID");
                });

            modelBuilder.Entity("RTM.Models.Area_Produccion_Materias_Primas", b =>
                {
                    b.HasOne("RTM.Models.Materias_Primas", "Materias_Primas")
                        .WithMany("Area_Produccion_Materias_Primas")
                        .HasForeignKey("Materia_PrimaID");

                    b.HasOne("RTM.Models.TableDB.SubDepartamentos", "SubDepartamentos")
                        .WithMany()
                        .HasForeignKey("SubDepartamentoID");
                });

            modelBuilder.Entity("RTM.Models.Control_Ubicacion_Piezas", b =>
                {
                    b.HasOne("RTM.Models.Estado", "Estado")
                        .WithMany("Control_Ubicacion_Piezas")
                        .HasForeignKey("EstadoID");

                    b.HasOne("RTM.Models.Ordenes_Clientes", "Ordenes_Clientes")
                        .WithMany("Control_Ubicacion_Piezas")
                        .HasForeignKey("Orden_ClienteID");

                    b.HasOne("RTM.Models.TableDB.SubDepartamentos", "SubDepartamentos")
                        .WithMany()
                        .HasForeignKey("SubDepartamentoID");
                });

            modelBuilder.Entity("RTM.Models.Departamentos", b =>
                {
                    b.HasOne("RTM.Models.TableDB.TiposDepartamentos", "TiposDepartamentos")
                        .WithMany()
                        .HasForeignKey("TipoDepartamentoID");
                });

            modelBuilder.Entity("RTM.Models.Empleado", b =>
                {
                    b.HasOne("RTM.Models.TableDB.Posiciones", "Posiciones")
                        .WithMany()
                        .HasForeignKey("PosicionID");

                    b.HasOne("RTM.Models.TableDB.SubDepartamentos", "SubDepartamentos")
                        .WithMany()
                        .HasForeignKey("SubDepartamentoID");
                });

            modelBuilder.Entity("RTM.Models.Materias_Primas", b =>
                {
                    b.HasOne("RTM.Models.TableDB.DivisionesMateriasPrimas", "DivisionesMateriasPrimas")
                        .WithMany()
                        .HasForeignKey("DivisionMateriaPrimaID");

                    b.HasOne("RTM.Models.Tipo_Material", "Tipo_Material")
                        .WithMany("Materias_Primas")
                        .HasForeignKey("Tipo_MaterialID");
                });

            modelBuilder.Entity("RTM.Models.Metricas_Eficiencias", b =>
                {
                    b.HasOne("RTM.Models.Control_Ubicacion_Piezas", "Control_Ubicacion_Piezas")
                        .WithMany("Metricas_Eficiencias")
                        .HasForeignKey("Control_Ubicacion_PiezaID");
                });

            modelBuilder.Entity("RTM.Models.Ordenes_Clientes", b =>
                {
                    b.HasOne("RTM.Models.Cliente", "Cliente")
                        .WithMany("Ordenes_Clientes")
                        .HasForeignKey("ClienteID");
                });

            modelBuilder.Entity("RTM.Models.Ordenes_Clientes_Detalles", b =>
                {
                    b.HasOne("RTM.Models.Marca", "Marca")
                        .WithMany("Ordenes_Clientes_Detalles")
                        .HasForeignKey("MarcaID");

                    b.HasOne("RTM.Models.Ordenes_Clientes", "Ordenes_Clientes")
                        .WithOne("Ordenes_Clientes_Detalles")
                        .HasForeignKey("RTM.Models.Ordenes_Clientes_Detalles", "Orden_ClienteID");
                });

            modelBuilder.Entity("RTM.Models.Ordenes_Clientes_Detalles_Colores", b =>
                {
                    b.HasOne("RTM.Models.Colore", "Colore")
                        .WithMany("Ordenes_Clientes_Detalles_Colores")
                        .HasForeignKey("ColorID");

                    b.HasOne("RTM.Models.Ordenes_Clientes_Detalles", "Ordenes_Clientes_Detalles")
                        .WithMany("Ordenes_Clientes_Detalles_Colores")
                        .HasForeignKey("Orden_Cliente_DetalleID");
                });

            modelBuilder.Entity("RTM.Models.Ordenes_Clientes_Detalles_Dimensiones", b =>
                {
                    b.HasOne("RTM.Models.Ordenes_Clientes_Detalles", "Ordenes_Clientes_Detalles")
                        .WithMany("Ordenes_Clientes_Detalles_Dimensiones")
                        .HasForeignKey("Orden_Cliente_DetalleID");

                    b.HasOne("RTM.Models.Size", "Size")
                        .WithMany("Ordenes_Clientes_Detalles_Dimensiones")
                        .HasForeignKey("SizeID");
                });

            modelBuilder.Entity("RTM.Models.Ordenes_Clientes_Detalles_Modelos", b =>
                {
                    b.HasOne("RTM.Models.Modelo", "Modelo")
                        .WithMany("Ordenes_Clientes_Detalles_Modelos")
                        .HasForeignKey("ModeloID");

                    b.HasOne("RTM.Models.Ordenes_Clientes_Detalles", "Ordenes_Clientes_Detalles")
                        .WithMany("Ordenes_Clientes_Detalles_Modelos")
                        .HasForeignKey("Orden_Cliente_DetalleID");
                });

            modelBuilder.Entity("RTM.Models.Ordenes_Clientes_Detalles_Tipos_Calzados", b =>
                {
                    b.HasOne("RTM.Models.Ordenes_Clientes_Detalles", "Ordenes_Clientes_Detalles")
                        .WithMany("Ordenes_Clientes_Detalles_Tipos_Calzados")
                        .HasForeignKey("Orden_Cliente_DetalleID");

                    b.HasOne("RTM.Models.Tipo_Calzados", "Tipo_Calzados")
                        .WithMany("Ordenes_Clientes_Detalles_Tipos_Calzados")
                        .HasForeignKey("Tipo_CalzadoID");
                });

            modelBuilder.Entity("RTM.Models.Size", b =>
                {
                    b.HasOne("RTM.Models.TableDB.CategoriaSize", "CategoriaSize")
                        .WithMany()
                        .HasForeignKey("CategoriaSizeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RTM.Models.Suplidor_Materia_Prima", b =>
                {
                    b.HasOne("RTM.Models.Almacen", "Almacen")
                        .WithMany("Suplidor_Materia_Prima")
                        .HasForeignKey("AlmacenID");

                    b.HasOne("RTM.Models.Materias_Primas", "Materias_Primas")
                        .WithMany("Suplidor_Materia_Prima")
                        .HasForeignKey("Materias_PrimasMateria_PrimaID");

                    b.HasOne("RTM.Models.Suplidore", "Suplidore")
                        .WithMany("Suplidor_Materia_Prima")
                        .HasForeignKey("SuplidoreSuplidorID");
                });

            modelBuilder.Entity("RTM.Models.TableDB.BOM", b =>
                {
                    b.HasOne("RTM.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RTM.Models.Modelo", "Modelos")
                        .WithMany()
                        .HasForeignKey("ModeloID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RTM.Models.TableDB.BOMDetalles", b =>
                {
                    b.HasOne("RTM.Models.TableDB.BOM", "BOMs")
                        .WithMany()
                        .HasForeignKey("BOMID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RTM.Models.TableDB.Estilos", b =>
                {
                    b.HasOne("RTM.Models.TableDB.Divisiones", "Divisiones")
                        .WithMany()
                        .HasForeignKey("DivisionID");

                    b.HasOne("RTM.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoID");

                    b.HasOne("RTM.Models.Marca", "Marcas")
                        .WithMany()
                        .HasForeignKey("MarcaID");

                    b.HasOne("RTM.Models.TableDB.UnidadesMedidasEstilos", "UnidadesMedidasEstilos")
                        .WithMany()
                        .HasForeignKey("UnidadMedidaEstiloID");
                });

            modelBuilder.Entity("RTM.Models.TableDB.Estilos_CategoriasEstilos", b =>
                {
                    b.HasOne("RTM.Models.TableDB.CategoriasEstilos", "CategoriasEstilos")
                        .WithMany()
                        .HasForeignKey("CategoriaEstiloID");

                    b.HasOne("RTM.Models.TableDB.Estilos", "Estilos")
                        .WithMany("CategoriasEstilos")
                        .HasForeignKey("EstiloID");
                });

            modelBuilder.Entity("RTM.Models.TableDB.Estilos_Colores", b =>
                {
                    b.HasOne("RTM.Models.Colore", "Colore")
                        .WithMany()
                        .HasForeignKey("ColorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RTM.Models.TableDB.Estilos", "Estilos")
                        .WithMany("Colores")
                        .HasForeignKey("EstiloID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RTM.Models.TableDB.Estilos_MateriasPrimas", b =>
                {
                    b.HasOne("RTM.Models.TableDB.Estilos", "Estilos")
                        .WithMany("Materias")
                        .HasForeignKey("EstiloID");

                    b.HasOne("RTM.Models.Materias_Primas", "Materias_Primas")
                        .WithMany()
                        .HasForeignKey("Materia_PrimaID");
                });

            modelBuilder.Entity("RTM.Models.TableDB.Estilos_Modelos", b =>
                {
                    b.HasOne("RTM.Models.TableDB.Estilos", "Estilos")
                        .WithMany("Modelos")
                        .HasForeignKey("EstiloID");

                    b.HasOne("RTM.Models.Modelo", "Modelo")
                        .WithMany()
                        .HasForeignKey("ModeloID");
                });

            modelBuilder.Entity("RTM.Models.TableDB.Estilos_TiposEstilos", b =>
                {
                    b.HasOne("RTM.Models.TableDB.Estilos", "Estilos")
                        .WithMany("TiposEstilos")
                        .HasForeignKey("EstiloID");

                    b.HasOne("RTM.Models.Tipo_Calzados", "Tipo_Calzados")
                        .WithMany()
                        .HasForeignKey("Tipo_CalzadoID");
                });

            modelBuilder.Entity("RTM.Models.TableDB.SubDepartamentos", b =>
                {
                    b.HasOne("RTM.Models.Departamentos", "Departamentos")
                        .WithMany()
                        .HasForeignKey("DepartamentoID");
                });

            modelBuilder.Entity("RTM.Models.Usuario", b =>
                {
                    b.HasOne("RTM.Models.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoID");

                    b.HasOne("RTM.Models.Role", "Role")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolID");

                    b.HasOne("RTM.Models.TableDB.SubDepartamentos", "SubDepartamentos")
                        .WithMany()
                        .HasForeignKey("SubDepartamentoID");
                });

            modelBuilder.Entity("RTM.Models.Usuarios_Almacen", b =>
                {
                    b.HasOne("RTM.Models.Almacen", "Almacen")
                        .WithMany("Usuarios_Almacen")
                        .HasForeignKey("AlmacenID");

                    b.HasOne("RTM.Models.Estados_Usuarios_Almacen", "Estados_Usuarios_Almacen")
                        .WithMany("Usuarios_Almacen")
                        .HasForeignKey("Estados_Usuarios_AlmacenEstado_Usuario_AlmacenID");

                    b.HasOne("RTM.Models.Usuario", "Usuario")
                        .WithMany("Usuarios_Almacen")
                        .HasForeignKey("UsuarioID");
                });
#pragma warning restore 612, 618
        }
    }
}
